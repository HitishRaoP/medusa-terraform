name: Deploy to LocalStack Fargate

on:
  push:
    branches:
      - "main"

jobs:
  deploy:
    runs-on: self-hosted
    env:
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_SESSION_TOKEN: test
      ECR_REPO_NAME: localstack-ecr-repository
      IMAGE_TAG: latest
      LOCALSTACK_ACCOUNT_ID: "000000000000"
      LOCALSTACK_DOMAIN: "localhost.localstack.cloud"
      LOCALSTACK_PORT: "4566"
      LOCALSTACK_ECR_URL: "000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Start LocalStack
        uses: LocalStack/setup-localstack@v0.2.3
        with:
          state-action: start
          image-tag: 'latest'
          install-awslocal: 'true'
          configuration: "DEBUG=1"
          use-pro: 'true'
        env:
          LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}

      - name: Create ECR Repository on LocalStack (skip if exists)
        run: |
          aws --endpoint-url=http://localstack:4566 ecr create-repository \
          --repository-name localstack-ecr-repository \
          --image-scanning-configuration scanOnPush=true

      - name: Build Docker Image
        run: |
          docker build -t backend-server ./backend

      - name: Tag Docker Image for LocalStack ECR
        run: |
          docker tag backend-server \
            $LOCALSTACK_ECR_URL/$ECR_REPO_NAME:$IMAGE_TAG

      - name: Push Image to LocalStack ECR
        run: |
          docker push $LOCALSTACK_ECR_URL/$ECR_REPO_NAME:$IMAGE_TAG

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Apply Terraform to Deploy to Fargate
        working-directory: ./terraform
        run: terraform apply -auto-approve
